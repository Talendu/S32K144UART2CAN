=============================================================================
List of generated methods in project: CAN2UART

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This method configures registers according to settings of routing and electrical features. It 
                provides pin initialization for selected pins during processor start-up. Selected pins are either user selected 
                pins or pins selected in pin properties in components.  Only pins of devices  enabled for auto initialization 
                are handled within this method.

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_SYS_SetScgConfiguration -Configures SCG module.
   - clockMan1_CLOCK_SYS_SetPccConfiguration -Configures PCC module.
   - clockMan1_CLOCK_SYS_SetSimConfiguration -Configures SIM module.
   - clockMan1_CLOCK_SYS_SetPmcConfiguration -Configures PMC module.
   - clockMan1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration according to pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error in last clock switch.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_ClearPending -Clear Pending Interrupt.
   - intMan1_INT_SYS_SetPending -Set Pending Interrupt.
   - intMan1_INT_SYS_GetPending -Get Pending Interrupt.
   - intMan1_INT_SYS_GetActive -Get Active Interrupt.

Module "canCom0"   (component flexcan)
   - canCom0_FLEXCAN_DRV_SetBitrate -Sets the FlexCAN bit rate.
   - canCom0_FLEXCAN_DRV_SetBitrateCbt -Sets the FlexCAN bit rate for FD BRS.
   - canCom0_FLEXCAN_DRV_GetBitrate -Gets the FlexCAN bit rate.
   - canCom0_FLEXCAN_DRV_SetRxMaskType -Sets the RX masking type.
   - canCom0_FLEXCAN_DRV_SetRxFifoGlobalMask -Sets the FlexCAN RX FIFO global standard or extended mask.
   - canCom0_FLEXCAN_DRV_SetRxMbGlobalMask -Sets the FlexCAN RX MB global standard or extended mask.
   - canCom0_FLEXCAN_DRV_SetRxIndividualMask -Sets the FlexCAN RX individual standard or extended mask.
   - canCom0_FLEXCAN_DRV_Init -Initializes the FlexCAN peripheral.
   - canCom0_FLEXCAN_DRV_Deinit -Shuts down a FlexCAN instance.
   - canCom0_FLEXCAN_DRV_ConfigTxMb -FlexCAN transmit message buffer field configuration.
   - canCom0_FLEXCAN_DRV_SendBlocking -Sends a CAN frame using the specified message buffer, in a blocking manner.
   - canCom0_FLEXCAN_DRV_Send -Sends a CAN frame using the specified message buffer.
   - canCom0_FLEXCAN_DRV_AbortTransfer -Ends a non-blocking FlexCAN transfer early.
   - canCom0_FLEXCAN_DRV_ConfigRxMb -FlexCAN receive message buffer field configuration.
   - canCom0_FLEXCAN_DRV_ConfigRxFifo -FlexCAN RX FIFO field configuration.
   - canCom0_FLEXCAN_DRV_ReceiveBlocking -Receives a CAN frame using the specified message buffer, in a blocking manner.
   - canCom0_FLEXCAN_DRV_Receive -Receives a CAN frame using the specified message buffer.
   - canCom0_FLEXCAN_DRV_RxFifoBlocking -Receives a CAN frame using the message FIFO, in a blocking manner.
   - canCom0_FLEXCAN_DRV_RxFifo -Receives a CAN frame using the message FIFO.
   - canCom0_FLEXCAN_DRV_IRQHandler -Interrupt handler for a FlexCAN instance.
   - canCom0_FLEXCAN_DRV_WakeUpHandler -Wake up handler for a FlexCAN instance.
   - canCom0_FLEXCAN_DRV_GetTransferStatus -Returns whether the previous FLEXCAN transfer has finished.
   - canCom0_FLEXCAN_DRV_InstallEventCallback -Installs a callback function for the IRQ handler.
   - canCom0_FLEXCAN_DRV_ConfigPN -Configures Pretended Networking settings.

Module "dmaController0" (component edma)
   - dmaController0_EDMA_DRV_Init -Initializes the eDMA module.
   - dmaController0_EDMA_DRV_Deinit -Shuts down the eDMA module.
   - dmaController0_EDMA_DRV_ChannelInit -Initializes a eDMA channel.
   - dmaController0_EDMA_DRV_ReleaseChannel -Releases an eDMA channel.
   - dmaController0_EDMA_DRV_StartChannel -Starts an eDMA channel.
   - dmaController0_EDMA_DRV_StopChannel -Stops the eDMA channel.
   - dmaController0_EDMA_DRV_InstallCallback -Registers the callback function and the parameter for eDMA channel.
   - dmaController0_EDMA_DRV_GetChannelStatus -Gets the eDMA channel status.
   - dmaController0_EDMA_DRV_PushConfigToReg -Copies the channel configuration to the TCD registers.
   - dmaController0_EDMA_DRV_PushConfigToSTCD -Copies the channel configuration to the software TCD structure.
   - dmaController0_EDMA_DRV_ConfigSingleBlockTransfer -Configures a simple single block data transfer with DMA. This function 
                configures the descriptor for a single block transfer.
   - dmaController0_EDMA_DRV_ConfigLoopTransfer -Configures the DMA transfer in loop mode.
   - dmaController0_EDMA_DRV_ConfigScatterGatherTransfer -Configures the DMA transfer in a scatter-gather mode.

Module "osif1"     (component osif)
   - osif1_OSIF_TimeDelay -Delays execution for a number of milliseconds.
   - osif1_OSIF_MutexLock -Waits for a mutex and locks it.
   - osif1_OSIF_MutexUnlock -Unlocks a previously locked mutex.
   - osif1_OSIF_MutexCreate -Create an unlocked mutex.
   - osif1_OSIF_MutexDestroy -Destroys a previously created mutex.
   - osif1_OSIF_SemaWait -Decrement a semaphore with timeout.
   - osif1_OSIF_SemaPost -Increment a semaphore.
   - osif1_OSIF_SemaCreate -Creates a semaphore with a given value.
   - osif1_OSIF_SemaDestroy -Destroys a previously created semaphore.
   - osif1_OSIF_GetMilliseconds -Returns the number of miliseconds elapsed since starting the internal timer or starting the 
                scheduler.

Module "lpuart1"   (component lpuart_hal)
   - lpuart1_LPUART_HAL_Init -Initializes the LPUART controller.
   - lpuart1_LPUART_HAL_SetTransmitterCmd -Enable/Disable the LPUART transmitter.
   - lpuart1_LPUART_HAL_GetTransmitterCmd -Gets the LPUART transmitter enabled/disabled configuration.
   - lpuart1_LPUART_HAL_SetReceiverCmd -Enable/Disable the LPUART receiver.
   - lpuart1_LPUART_HAL_GetReceiverCmd -Gets the LPUART receiver enabled/disabled configuration.
   - lpuart1_LPUART_HAL_SetBaudRate -Configures the LPUART baud rate.
   - lpuart1_LPUART_HAL_SetBaudRateDivisor -Sets the LPUART baud rate modulo divisor.
   - lpuart1_LPUART_HAL_GetRxDataPolarity -Returns whether the recevie data is inverted or not.
   - lpuart1_LPUART_HAL_SetRxDataPolarity -Sets whether the recevie data is inverted or not.
   - lpuart1_LPUART_HAL_SetBitCountPerChar -Configures the number of bits per character in the LPUART controller.
   - lpuart1_LPUART_HAL_SetParityMode -Configures parity mode in the LPUART controller.
   - lpuart1_LPUART_HAL_SetStopBitCount -Configures the number of stop bits in the LPUART controller.
   - lpuart1_LPUART_HAL_GetDataRegAddr -Get LPUART tx/rx data register address.
   - lpuart1_LPUART_HAL_SetIntMode -Configures the LPUART module interrupts.
   - lpuart1_LPUART_HAL_GetIntMode -Returns LPUART module interrupts state.
   - lpuart1_LPUART_HAL_Putchar -Sends the LPUART 8-bit character.
   - lpuart1_LPUART_HAL_Putchar9 -Sends the LPUART 9-bit character.
   - lpuart1_LPUART_HAL_Putchar10 -Sends the LPUART 10-bit character (Note: Feature available on select LPUART instances).
   - lpuart1_LPUART_HAL_Getchar -Gets the LPUART 8-bit character.
   - lpuart1_LPUART_HAL_Getchar9 -Gets the LPUART 9-bit character.
   - lpuart1_LPUART_HAL_Getchar10 -Gets the LPUART 10-bit character.
   - lpuart1_LPUART_HAL_SendDataPolling -Send out multiple bytes of data using polling method.
   - lpuart1_LPUART_HAL_ReceiveDataPolling -Receive multiple bytes of data using polling method.
   - lpuart1_LPUART_HAL_GetStatusFlag -LPUART get status flag.
   - lpuart1_LPUART_HAL_ClearStatusFlag -LPUART clears an individual status flag.
   - lpuart1_LPUART_HAL_SetIdleChar -Configures the number of idle characters.
   - lpuart1_LPUART_HAL_GetIdleChar -Gets the number of idle characters for IDLE flag.
   - lpuart1_LPUART_HAL_IsCurrentDataWithNoise -Checks whether the current data word was received with noise.
   - lpuart1_LPUART_HAL_IsCurrentDataWithFrameError -Checks whether the current data word was received with frame error.
   - lpuart1_LPUART_HAL_SetTxSpecialChar -Indicates a special character is to be transmitted.
   - lpuart1_LPUART_HAL_IsCurrentDataWithParityError -Checks whether the current data word was received with parity error.
   - lpuart1_LPUART_HAL_IsReceiveBufferEmpty -Checks whether the receive buffer is empty.
   - lpuart1_LPUART_HAL_WasPreviousReceiverStateIdle -Checks whether the previous BUS state was idle before this byte is 
                received.
   - lpuart1_LPUART_HAL_SetWaitModeOperation -Configures the LPUART operation in wait mode (operates or stops operations in 
                wait mode).
   - lpuart1_LPUART_HAL_GetWaitModeOperation -Gets the LPUART operation in wait mode.
   - lpuart1_LPUART_HAL_SetLoopbackCmd -Configures the LPUART loopback operation (enable/disable loopback operation)
   - lpuart1_LPUART_HAL_SetSingleWireCmd -Configures the LPUART single-wire operation (enable/disable single-wire mode).
   - lpuart1_LPUART_HAL_SetTxdirInSinglewireMode -Configures the LPUART transmit direction while in single-wire mode.
   - lpuart1_LPUART_HAL_SetReceiverInStandbyMode -Places the LPUART receiver in standby mode.
   - lpuart1_LPUART_HAL_PutReceiverInNormalMode -Places the LPUART receiver in a normal mode.
   - lpuart1_LPUART_HAL_IsReceiverInStandby -Checks whether the LPUART receiver is in a standby mode.
   - lpuart1_LPUART_HAL_SetReceiverWakeupMode -Sets the LPUART receiver wakeup method from standby mode.
   - lpuart1_LPUART_HAL_GetReceiverWakeupMode -Gets the LPUART receiver wakeup method from standby mode.
   - lpuart1_LPUART_HAL_SetIdleLineDetect -LPUART idle-line detect operation configuration.
   - lpuart1_LPUART_HAL_SetBreakCharTransmitLength -LPUART break character transmit length configuration.
   - lpuart1_LPUART_HAL_SetBreakCharDetectLength -LPUART break character detect length configuration.
   - lpuart1_LPUART_HAL_QueueBreakField -LPUART transmit sends break character configuration.
   - lpuart1_LPUART_HAL_SetMatchAddressMode -Configures match address mode control.
   - lpuart1_LPUART_HAL_SetMatchAddressReg1 -Configures address match register 1.
   - lpuart1_LPUART_HAL_SetMatchAddressReg2 -Configures address match register 2.
   - lpuart1_LPUART_HAL_SetSendMsbFirstCmd -LPUART sends the MSB first configuration.
   - lpuart1_LPUART_HAL_SetReceiveResyncCmd -LPUART enable/disable re-sync of received data configuration.

Module "flash1"    (component flash)
   - flash1_FLASH_DRV_Init -Flash initialization.
   - flash1_FLASH_DRV_GetPFlashProtection -P-Flash get protection.
   - flash1_FLASH_DRV_SetPFlashProtection -P-Flash set protection.
   - flash1_FLASH_DRV_GetSecurityState -Flash get security state.
   - flash1_FLASH_DRV_SecurityBypass -Flash security bypass.
   - flash1_FLASH_DRV_EraseAllBlock -Flash erase all Blocks.
   - flash1_FLASH_DRV_VerifyAllBlock -Flash verify all Blocks.
   - flash1_FLASH_DRV_EraseSector -Flash erase sector.
   - flash1_FLASH_DRV_VerifySection -Flash verify sector.
   - flash1_FLASH_DRV_EraseSuspend -Flash erase suspend.
   - flash1_FLASH_DRV_EraseResume -Flash erase resume.
   - flash1_FLASH_DRV_ReadOnce -Flash read once.
   - flash1_FLASH_DRV_ProgramOnce -Flash program once.
   - flash1_FLASH_DRV_Program -Flash program.
   - flash1_FLASH_DRV_ProgramCheck -Flash program check.
   - flash1_FLASH_DRV_CheckSum -Calculate check sum.
   - flash1_FLASH_DRV_ProgramSection -Flash program section.
   - flash1_FLASH_DRV_EraseBlock -Flash erase block.
   - flash1_FLASH_DRV_VerifyBlock -Flash verify block.
   - flash1_FLASH_DRV_GetEERAMProtection -EERAM get protection.
   - flash1_FLASH_DRV_SetEERAMProtection -EERAM set protection.
   - flash1_FLASH_DRV_SetFlexRamFunction -Flash Set FlexRam function command.
   - flash1_FLASH_DRV_EEEWrite -EEPROM Emulator Write.
   - flash1_FLASH_DRV_DEFlashPartition -Flash D/E-Flash Partition.
   - flash1_FLASH_DRV_GetDFlashProtection -D-Flash get protection.
   - flash1_FLASH_DRV_SetDFlashProtection -D-Flash set protection.
   - flash1_FLASH_DRV_PFlashSwap -swap between the two half of total logical P-Flash memory blocks within the memory map
   - flash1_FLASH_DRV_PFlashSwapCtl -implements swap control command corresponding with swap control code provided via swapcmd 
                parameter
   - flash1_FLASH_DRV_EraseAllBlockUnsecure -Flash erase all Blocks.

Module "crc"       (component crc)
   - crc_CRC_DRV_Init -This function initializes CRC driver based on user configuration input. The user must make sure that the 
                clock is enabled.
   - crc_CRC_DRV_Deinit -This function sets the default configuration.
   - crc_CRC_DRV_WriteData -This function appends a block of bytes to the current CRC calculation.
   - crc_CRC_DRV_GetCrcResult -This function returns the current result of the CRC calculation.
   - crc_CRC_DRV_Configure -This function configures the CRC module from a user configuration structure.

Module "Cpu"       (component S32K144_100)
   - Cpu_SystemInit -This function disables the watchdog, enables FPU and the power mode protection. SystemInit is called from 
                startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock. It must be called whenever the core clock is changed during program execution
   - Cpu_SystemSoftwareReset -This method initiates initiate a system reset.

===================================================================================
